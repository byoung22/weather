(()=>{"use strict";var n,e,t,r,o={28:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),c=t.n(s),d=new URL(t(424),t.b),l=i()(o()),A=c()(d);l.push([n.id,`/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n  --card-color: rgba(0, 0, 0, 0.782);\n  font-size: 1.5rem;\n  color: white;\n}\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-image: url(${A});\n  background-size: cover;\n  height: 100vh;\n}\nimg {\n  height: 50px;\n  width: auto;\n}\n.search-container {\n  margin: 5vh;\n}\n.search-container input,\n.search-container button {\n  background-color: var(--card-color);\n}\n\n.today {\n  border-radius: 2rem;\n  padding: 1.2rem;\n  display: flex;\n  background-color: var(--card-color);\n  width: min(80vw, 1000px);\n  font-size: 1.6rem;\n}\n.today .left-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n}\n.today .left-container .condition img {\n  height: 5rem;\n  width: auto;\n}\n.today .left-container .minmax {\n  display: flex;\n  gap: 1rem;\n}\n.today .right-container {\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n}\n.today .right-container .info {\n  display: flex;\n  justify-content: space-evenly;\n  padding: 1rem;\n}\n.today .right-container .info .text {\n  display: flex;\n  justify-content: center;\n}\n.today .right-container .hours {\n  flex: 2;\n  display: flex;\n  overflow: auto;\n}\n.hours::-webkit-scrollbar {\n  display: none;\n}\n.today .right-container .hours .card {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  height: 8rem;\n  padding: 5px 1rem;\n}\n.card .sunset-sunrise-time {\n  width: 7rem;\n}\n.card .hour-card-row {\n  display: flex;\n  justify-content: center;\n}\n.forecasts {\n  margin: 5vh;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  border-radius: 2rem;\n  width: min(80vw, 1000px);\n  font-size: 1.8rem;\n}\n.forecasts .forecast {\n  background-color: var(--card-color);\n  border-radius: 2rem;\n  display: flex;\n  align-items: center;\n}\n.forecasts .forecast .day {\n  width: 10rem;\n  padding: 0px 1rem;\n}\n.forecasts .forecast .icon {\n  flex: 1;\n}\n.forecasts .forecast p {\n  display: flex;\n  justify-content: center;\n  width: 9rem;\n}\n@media (max-width: 800px) {\n  .today {\n    font-size: 1.5rem;\n    flex-direction: column;\n  }\n  .today .right-container .info {\n    font-size: 1rem;\n  }\n  .forecast {\n    font-size: 1rem;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;AACA;EACE,sBAAsB;EACtB,kCAAkC;EAClC,iBAAiB;EACjB,YAAY;AACd;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;;EAEnB,yDAAgD;EAChD,sBAAsB;EACtB,aAAa;AACf;AACA;EACE,YAAY;EACZ,WAAW;AACb;AACA;EACE,WAAW;AACb;AACA;;EAEE,mCAAmC;AACrC;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,aAAa;EACb,mCAAmC;EACnC,wBAAwB;EACxB,iBAAiB;AACnB;AACA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;AACb;AACA;EACE,YAAY;EACZ,WAAW;AACb;AACA;EACE,aAAa;EACb,SAAS;AACX;AACA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,cAAc;AAChB;AACA;EACE,aAAa;EACb,6BAA6B;EAC7B,aAAa;AACf;AACA;EACE,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,OAAO;EACP,aAAa;EACb,cAAc;AAChB;AACA;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,qBAAqB;EACrB,sBAAsB;EACtB,YAAY;EACZ,iBAAiB;AACnB;AACA;EACE,WAAW;AACb;AACA;EACE,aAAa;EACb,uBAAuB;AACzB;AACA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,SAAS;;EAET,mBAAmB;EACnB,wBAAwB;EACxB,iBAAiB;AACnB;AACA;EACE,mCAAmC;EACnC,mBAAmB;EACnB,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,YAAY;EACZ,iBAAiB;AACnB;AACA;EACE,OAAO;AACT;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,WAAW;AACb;AACA;EACE;IACE,iBAAiB;IACjB,sBAAsB;EACxB;EACA;IACE,eAAe;EACjB;EACA;IACE,eAAe;EACjB;AACF",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n  --card-color: rgba(0, 0, 0, 0.782);\n  font-size: 1.5rem;\n  color: white;\n}\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  background-image: url("./photos/background.jpg");\n  background-size: cover;\n  height: 100vh;\n}\nimg {\n  height: 50px;\n  width: auto;\n}\n.search-container {\n  margin: 5vh;\n}\n.search-container input,\n.search-container button {\n  background-color: var(--card-color);\n}\n\n.today {\n  border-radius: 2rem;\n  padding: 1.2rem;\n  display: flex;\n  background-color: var(--card-color);\n  width: min(80vw, 1000px);\n  font-size: 1.6rem;\n}\n.today .left-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n}\n.today .left-container .condition img {\n  height: 5rem;\n  width: auto;\n}\n.today .left-container .minmax {\n  display: flex;\n  gap: 1rem;\n}\n.today .right-container {\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n}\n.today .right-container .info {\n  display: flex;\n  justify-content: space-evenly;\n  padding: 1rem;\n}\n.today .right-container .info .text {\n  display: flex;\n  justify-content: center;\n}\n.today .right-container .hours {\n  flex: 2;\n  display: flex;\n  overflow: auto;\n}\n.hours::-webkit-scrollbar {\n  display: none;\n}\n.today .right-container .hours .card {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  height: 8rem;\n  padding: 5px 1rem;\n}\n.card .sunset-sunrise-time {\n  width: 7rem;\n}\n.card .hour-card-row {\n  display: flex;\n  justify-content: center;\n}\n.forecasts {\n  margin: 5vh;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n\n  border-radius: 2rem;\n  width: min(80vw, 1000px);\n  font-size: 1.8rem;\n}\n.forecasts .forecast {\n  background-color: var(--card-color);\n  border-radius: 2rem;\n  display: flex;\n  align-items: center;\n}\n.forecasts .forecast .day {\n  width: 10rem;\n  padding: 0px 1rem;\n}\n.forecasts .forecast .icon {\n  flex: 1;\n}\n.forecasts .forecast p {\n  display: flex;\n  justify-content: center;\n  width: 9rem;\n}\n@media (max-width: 800px) {\n  .today {\n    font-size: 1.5rem;\n    flex-direction: column;\n  }\n  .today .right-container .info {\n    font-size: 1rem;\n  }\n  .forecast {\n    font-size: 1rem;\n  }\n}\n'],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},89:(n,e,t)=>{var r=t(379),o=t.n(r),a=t(795),i=t.n(a),s=t(569),c=t.n(s),d=t(565),l=t.n(d),A=t(216),u=t.n(A),f=t(589),h=t.n(f),p=t(28),m={};m.styleTagTransform=h(),m.setAttributes=l(),m.insert=c().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),o()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var u=t(A),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(f);else{var h=o(f,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:h,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},471:(n,e,t)=>{t.d(e,{V:()=>r});class r{constructor(){this.today={},this.forecast=[{},{},{}],this.hours=[],this.temp="F"}async addData(n){try{const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=a91fd93998594df68e9202550232006&q=${n}&days=3&aqi=yes`),t=await e.json();"F"===this.temp&&(this.today.temp=t.current.temp_f,this.today.feelslike=t.current.feelslike_f,this.today.maxtemp=t.forecast.forecastday[0].day.maxtemp_f,this.today.mintemp=t.forecast.forecastday[0].day.mintemp_f),"C"===this.temp&&(this.today.temp=t.current.temp_c,this.today.feelslike=t.current.feelslike_c,this.today.maxtemp=t.forecast.forecastday[0].day.maxtemp_c,this.today.mintemp=t.forecast.forecastday[0].day.mintemp_c),this.today.condition=t.current.condition.text,this.today.humidity=t.current.humidity,this.today.location=`${t.location.name}, ${t.location.region}`,this.today.uv=t.current.uv,this.today.sunrise=t.forecast.forecastday[0].astro.sunrise,this.today.sunset=t.forecast.forecastday[0].astro.sunset,this.today.epa=t.current.air_quality["us-epa-index"];for(let n=0;n<3;n++)this.forecast[n].condition=t.forecast.forecastday[n].day.condition.text,"F"===this.temp&&(this.forecast[n].maxtemp=t.forecast.forecastday[n].day.maxtemp_f,this.forecast[n].mintemp=t.forecast.forecastday[n].day.mintemp_f,this.forecast[n].avgtemp=t.forecast.forecastday[n].day.avgtemp_f),"C"===this.temp&&(this.forecast[n].maxtemp=t.forecast.forecastday[n].day.maxtemp_c,this.forecast[n].mintemp=t.forecast.forecastday[n].day.mintemp_c,this.forecast[n].avgtemp=t.forecast.forecastday[n].day.avgtemp_f);let r=(new Date).getHours(),o=parseInt(t.forecast.forecastday[0].astro.sunrise.split(":")[0],10),a=parseInt(t.forecast.forecastday[0].astro.sunset.split(":")[0],10)+12;r>o&&(o=parseInt(t.forecast.forecastday[1].astro.sunrise.split(":")[0],10)),r>a&&(a=parseInt(t.forecast.forecastday[1].astro.sunset.split(":")[0],10)+12);for(let n=0;n<27;n++)r<24?(this.hours[n]={},this.hours[n].hour=new Date(t.forecast.forecastday[0].hour[r].time).getHours(),this.hours[n].condition=t.forecast.forecastday[0].hour[r].condition.text,"F"===this.temp&&(this.hours[n].temp=t.forecast.forecastday[0].hour[r].temp_f),"C"===this.temp&&(this.hours[n].temp=t.forecast.forecastday[0].hour[r].temp_c)):(this.hours[n]={},this.hours[n].hour=new Date(t.forecast.forecastday[1].hour[r-24].time).getHours(),this.hours[n].condition=t.forecast.forecastday[1].hour[r-24].condition.text,"F"===this.temp&&(this.hours[n].temp=t.forecast.forecastday[1].hour[r-24].temp_f),"C"===this.temp&&(this.hours[n].temp=t.forecast.forecastday[1].hour[r-24].temp_c)),r!==o&&r-24!==o||(this.hours[n+1]=[],this.hours[n+1][0]=t.forecast.forecastday[0].astro.sunrise,this.hours[n+1][1]="Sunrise",n++),r!==a&&r-24!==a||(this.hours[n+1]=[],this.hours[n+1][0]=t.forecast.forecastday[0].astro.sunset,this.hours[n+1][1]="Sunset",n++),r++}catch(n){throw Error(n)}}addDay(){const n=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],e=new Date;this.today.day=n[e.getDay()],this.forecast[0].day="Today",this.forecast[1].day=n[e.getDay()+1>6?e.getDay()-6:e.getDay()+1],this.forecast[2].day=n[e.getDay()+2>6?e.getDay()-5:e.getDay()+2]}async fillObject(n){await this.addData(n),this.addDay()}reset(){this.today={},this.forecast=[{},{},{}],this.hours=[]}}},138:(n,e,t)=>{t.a(n,(async(n,e)=>{try{t(89);var r=t(471),o=t(987);const n=document.querySelector(".search"),a=document.querySelector(".search-button"),i=new r.V;await i.fillObject("LA"),(0,o.K)(i),a.addEventListener("click",(async()=>{i.reset(),await i.fillObject(n.value),(0,o.K)(i)})),e()}catch(n){e(n)}}),1)},987:(n,e,t)=>{t.d(e,{K:()=>j});const r=t.p+"17608b0baa1391eb05a0.png",o=t.p+"9a181351a22b54059f46.png",a=t.p+"8ea9e73debaf4c25a8cf.png",i=t.p+"337f58255916e54ea1e1.png",s=t.p+"036a7f4b9402e1d74535.png",c=t.p+"b2a1d4434712ee44f9ba.png",d=t.p+"307889846f4a6877a9ea.png",l=t.p+"2274b0f9afde269933e5.png",A=t.p+"b79f79a47ff26675bbb6.png",u=t.p+"f3012ddd8e268e19eb2e.png",f=t.p+"cc1054a285a2ec8fecca.png",h=t.p+"cc1054a285a2ec8fecca.png",p=t.p+"ff6c626ccae29522a258.png",m=t.p+"a05c0ed9c03235edca96.png",y=t.p+"bf216d4d2f4aa9d2a734.png",g=t.p+"779f81a36dbf880c84cf.png",C=t.p+"1f644ecc1cc537995721.png",b=document.querySelector(".left-container .city"),v=document.querySelector(".left-container .temp"),E=document.querySelector(".left-container .condition"),x=document.querySelector(".left-container .minmax .mintemp"),w=document.querySelector(".left-container .minmax .maxtemp"),B=document.querySelector(".right-container .info .feels .text"),M=document.querySelector(".right-container .info .epa .text"),z=document.querySelector(".right-container .info .humidity .text"),k=document.querySelector(".right-container .info .uv .text"),S=document.querySelector(".right-container .hours"),L=document.querySelector(".forecasts");let P,q;function _(n,e,t){const b=new Image;b.classList.add("icon"),"Sunrise"===e&&(b.src=g),"Sunset"===e&&(b.src=C),"Sunny"===e&&(b.src=r),"Clear"===e&&(b.src=o),"Cloudy"!==e&&"Overcast"!==e||(b.src=s),"Mist"!==e&&"Fog"!==e&&"Freezing fog"!==e||(b.src=c),"Blizzard"!==e&&"Moderate or heavy sleet"!==e&&"Patchy heavy snow"!==e&&"Heavy snow"!==e&&"Ice pellets"!==e&&"Moderate or heavy snow showers"!==e&&"Moderate or heavy showers of ice pellets"!==e||(b.src=y),n>=q||n<=P?("Partly cloudy"===e&&(b.src=i),"Patchy rain possible"!==e&&"Patchy light drizzle"!==e&&"Light drizzle"!==e&&"Patchy light rain"!==e&&"Light rain"!==e&&"Light freezing rain"!==e&&"Light rain shower"!==e&&"Light sleet showers"!==e||(b.src=l),"Heavy freezing drizzle"!==e&&"Moderate rain at times"!==e&&"Moderate rain"!==e&&"Heavy rain at times"!==e&&"Heavy rain"!==e&&"Moderate or heavy freezing rain"!==e&&"Moderate or heavy rain shower"!==e&&"Torrential rain shower"!==e&&"Moderate or heavy sleet showers"!==e||(b.src=u),"Patchy snow possible"!==e&&"Patchy sleet possible"!==e&&"Patchy freezing drizzle possible"!==e&&"Blowing snow"!==e&&"Freezing drizzle"!==e&&"Light sleet"!==e&&"Patchy light snow"!==e&&"Light snow"!==e&&"Patchy moderate snow"!==e&&"Moderate snow"!==e&&"Light snow showers"!==e&&"Light showers of ice pellets"!==e||(b.src=m),"Thundery outbreaks possible"!==e&&"Patchy light rain with thunder"!==e&&"Moderate or heavy rain with thunder"!==e&&"Patchy light snow with thunder"!==e&&"Moderate or heavy snow with thunder"!==e||(b.src=h)):("Partly cloudy"===e&&(b.src=a),"Patchy rain possible"!==e&&"Patchy light drizzle"!==e&&"Light drizzle"!==e&&"Patchy light rain"!==e&&"Light rain"!==e&&"Light freezing rain"!==e&&"Light rain shower"!==e&&"Light sleet showers"!==e||(b.src=d),"Heavy freezing drizzle"!==e&&"Moderate rain at times"!==e&&"Moderate rain"!==e&&"Heavy rain at times"!==e&&"Heavy rain"!==e&&"Moderate or heavy freezing rain"!==e&&"Moderate or heavy rain shower"!==e&&"Torrential rain shower"!==e&&"Moderate or heavy sleet showers"!==e||(b.src=A),"Patchy snow possible"!==e&&"Patchy sleet possible"!==e&&"Patchy freezing drizzle possible"!==e&&"Blowing snow"!==e&&"Freezing drizzle"!==e&&"Light sleet"!==e&&"Patchy light snow"!==e&&"Light snow"!==e&&"Patchy moderate snow"!==e&&"Moderate snow"!==e&&"Light snow showers"!==e&&"Light showers of ice pellets"!==e||(b.src=p),"Thundery outbreaks possible"!==e&&"Patchy light rain with thunder"!==e&&"Moderate or heavy rain with thunder"!==e&&"Patchy light snow with thunder"!==e&&"Moderate or heavy snow with thunder"!==e||(b.src=f)),t.appendChild(b)}function j(n){var e;b.textContent="",v.textContent="",E.textContent="",x.textContent="",w.textContent="",B.textContent="",M.textContent="",z.textContent="",k.textContent="",S.textContent="",L.textContent="",function(n){P=parseInt(n.today.sunrise.split(":")[0],10),q=parseInt(n.today.sunset.split(":")[0],10)+12}(n),e=n.today,b.textContent=e.location,v.textContent=`${e.temp}°`,_((new Date).getHours(),e.condition,E),x.textContent=`L: ${e.mintemp}°`,w.textContent=`H: ${e.maxtemp}°`,function(n){B.textContent=`${n.feelslike}°`,M.textContent=n.epa,z.textContent=n.humidity,k.textContent=n.uv}(n.today),function(n){const e=["12AM","1AM","2AM","3AM","4AM","5AM","6AM","7AM","8AM","9AM","10AM","11AM","12PM","1PM","2PM","3PM","4PM","5PM","6PM","7PM","8PM","9PM","10PM","11PM","NOW"];n[0].hour=24,n.forEach((n=>{const t=document.createElement("div");t.classList.add("card");const r=document.createElement("div");r.classList.add("hour-card-row"),t.appendChild(r);const o=document.createElement("div");o.classList.add("hour-card-row"),t.appendChild(o);const a=document.createElement("div");a.classList.add("hour-card-row"),t.appendChild(a),Array.isArray(n)?(r.textContent=n[0],r.classList.add("sunset-sunrise-time"),_(n.hour,n[1],o),a.textContent=n[1]):(r.textContent=`${e[n.hour]}`,_(n.hour,n.condition,o),a.textContent=`${n.temp}°`),S.appendChild(t)}))}(n.hours),function(){let n,e,t=!1;S.addEventListener("mousedown",(r=>{t=!0,n=r.pageX,e=S.scrollLeft})),S.addEventListener("mouseleave",(()=>{t=!1})),S.addEventListener("mouseup",(()=>{t=!1})),S.addEventListener("mousemove",(r=>{if(!t)return;r.preventDefault();const o=3*(r.pageX-n);S.scrollLeft=e-o}))}(),function(n){n.forEach((n=>{const e=document.createElement("p");e.classList.add("forecast"),L.appendChild(e);const t=document.createElement("div");t.classList.add("day"),t.textContent=n.day,e.appendChild(t);const r=document.createElement("div");r.classList.add("icon"),_(12,n.condition,r),e.appendChild(r);const o=document.createElement("p");o.textContent=`L: ${n.mintemp}°`,e.appendChild(o);const a=document.createElement("p");a.textContent=`Avg: ${n.avgtemp}°`,e.appendChild(a);const i=document.createElement("p");i.textContent=`H: ${n.maxtemp}°`,e.appendChild(i)}))}(n.forecast)}},424:(n,e,t)=>{n.exports=t.p+"e9eac06ae95d08badc3c.jpg"}},a={};function i(n){var e=a[n];if(void 0!==e)return e.exports;var t=a[n]={id:n,exports:{}};return o[n](t,t.exports,i),t.exports}i.m=o,n="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",e="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=n=>{n&&n.d<1&&(n.d=1,n.forEach((n=>n.r--)),n.forEach((n=>n.r--?n.r++:n())))},i.a=(o,a,i)=>{var s;i&&((s=[]).d=-1);var c,d,l,A=new Set,u=o.exports,f=new Promise(((n,e)=>{l=e,d=n}));f[e]=u,f[n]=n=>(s&&n(s),A.forEach(n),f.catch((n=>{}))),o.exports=f,a((o=>{var a;c=(o=>o.map((o=>{if(null!==o&&"object"==typeof o){if(o[n])return o;if(o.then){var a=[];a.d=0,o.then((n=>{i[e]=n,r(a)}),(n=>{i[t]=n,r(a)}));var i={};return i[n]=n=>n(a),i}}var s={};return s[n]=n=>{},s[e]=o,s})))(o);var i=()=>c.map((n=>{if(n[t])throw n[t];return n[e]})),d=new Promise((e=>{(a=()=>e(i)).r=0;var t=n=>n!==s&&!A.has(n)&&(A.add(n),n&&!n.d&&(a.r++,n.push(a)));c.map((e=>e[n](t)))}));return a.r?d:i()}),(n=>(n?l(f[t]=n):d(u),r(s)))),s&&s.d<0&&(s.d=0)},i.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return i.d(e,{a:e}),e},i.d=(n,e)=>{for(var t in e)i.o(e,t)&&!i.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),i.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;i.g.importScripts&&(n=i.g.location+"");var e=i.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&!n;)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=n})(),i.b=document.baseURI||self.location.href,i.nc=void 0,i(138)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,